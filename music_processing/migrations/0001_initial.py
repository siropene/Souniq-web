# Generated by Django 5.2.4 on 2025-07-28 19:04

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MidiFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(blank=True, null=True, upload_to="midi/")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("processing", "Procesando"),
                            ("completed", "Completado"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="GeneratedTrack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("num_prime_tokens", models.IntegerField(default=600)),
                ("num_gen_tokens", models.IntegerField(default=600)),
                ("num_mem_tokens", models.IntegerField(default=6990)),
                ("gen_outro", models.CharField(default="Auto", max_length=20)),
                ("gen_drums", models.BooleanField(default=False)),
                ("model_temperature", models.FloatField(default=0.9)),
                ("model_sampling_top_p", models.FloatField(default=0.96)),
                (
                    "generated_file",
                    models.FileField(
                        blank=True, null=True, upload_to="generated_tracks/"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("processing", "Procesando"),
                            ("completed", "Completado"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_tracks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "midi_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_processing.midifile",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Song",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("original_file", models.FileField(upload_to="songs/original/")),
                (
                    "uploaded_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploaded", "Subida"),
                            ("processing_stems", "Procesando Stems"),
                            ("stems_completed", "Stems Completados"),
                            ("error", "Error"),
                        ],
                        default="uploaded",
                        max_length=20,
                    ),
                ),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="songs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="Stem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stem_type",
                    models.CharField(
                        choices=[
                            ("drums", "Batería"),
                            ("bass", "Bajo"),
                            ("piano", "Piano"),
                            ("other", "Otros"),
                            ("vocals", "Voces"),
                            ("guitar", "Guitarra"),
                            ("Clean", "Instrumental"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file", models.FileField(upload_to="stems/")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("order", models.IntegerField(default=0)),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stems",
                        to="music_processing.song",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("song", "order")},
            },
        ),
        migrations.CreateModel(
            name="ProcessingTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("stem_generation", "Generación de Stems"),
                            ("midi_conversion", "Conversión a MIDI"),
                            ("track_generation", "Generación de Track"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("in_progress", "En Progreso"),
                            ("completed", "Completado"),
                            ("failed", "Fallido"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("celery_task_id", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("progress_percentage", models.IntegerField(default=0)),
                (
                    "generated_track",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_processing.generatedtrack",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_processing.song",
                    ),
                ),
                (
                    "stem",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_processing.stem",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="midifile",
            name="stem",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="midi_file",
                to="music_processing.stem",
            ),
        ),
    ]
